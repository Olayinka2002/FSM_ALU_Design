library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
use IEEE.NUMERIC_STD.all;

entity ALU is 
port(
	input_A: in STD_LOGIC_VECTOR(7 downto 0);
	input_B: in STD_LOGIC_VECTOR( 7 downto 0);
	op_code: in STD_LOGIC_VECTOR (2 downto 0);
	Result: out STD_LOGIC_VECTOR (7 downto 0);
	carry_out: out STD_LOGIC;
	);
end entity;

architecture behavioral of ALU is
signal ALU_RESULT: STD_LOGIC_VECTOR (7 downto 0);
begin
process (A, B, op_code)
begin
	case(op_code) is
		when "000" => --Addition
			ALU_RESULT <= A + B;
		when "001" => --Subtraction
			ALU_RESULT <= A - B;
		when others => --Any other operations
			ALU_RESULT <= A;
	end case
end process
Result <= ALU_RESULT;
end architecture;

